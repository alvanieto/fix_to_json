import tables

let fixMessageTypes = {
  "0": "Heartbeat",
  "1": "Test Request",
  "2": "Resend Request",
  "3": "Reject",
  "4": "Sequence Reset",
  "5": "Logout",
  "6": "Indication of Interest",
  "7": "Advertisement",
  "8": "Execution Report",
  "9": "Order Cancel Reject",
  "A": "Logon",
  "B": "News",
  "C": "Email",
  "D": "Order - Single",
  "E": "Order - List",
  "F": "Order Cancel Request",
  "G": "Order Cancel/Replace Request",
  "H": "Order Status Request",
  "J": "Allocation Instruction",
  "K": "List Cancel Request",
  "L": "List Execute",
  "M": "List Status Request",
  "N": "List Status",
  "P": "Allocation Instruction Ack",
  "Q": "Don't Know Trade (DK)",
  "R": "Quote Request",
  "S": "Quote",
  "T": "Settlement Instructions",
  "V": "Market Data Request",
  "W": "Market Data Snapshot/Full Refresh",
  "X": "Market Data Incremental Refresh",
  "Y": "Market Data Request Reject",
  "Z": "Quote Cancel",
  "a": "Quote Status Request",
  "b": "Quote Acknowledgement",
  "c": "Security Definition Request",
  "d": "Security Definition",
  "e": "Security Status Request",
  "f": "Security Status",
  "g": "Trading Session Status Request",
  "h": "Trading Session Status",
  "i": "Mass Quote",
  "j": "Business Message Reject",
  "k": "Bid Request",
  "l": "Bid Response",
  "m": "List Strike Price",
}.toTable

proc getMessageType*(msgType: string): string =
  if fixMessageTypes.hasKey(msgType):
    return fixMessageTypes[msgType]
  return "Unknown Message Type"


import tables

let fixFieldDescriptions = {
  "1": "Account",
  "2": "AdvId",
  "3": "AdvRefID",
  "4": "AdvSide",
  "5": "AdvTransType",
  "6": "AvgPx",
  "7": "BeginSeqNo",
  "8": "BeginString",
  "9": "BodyLength",
  "10": "CheckSum",
  "11": "ClOrdID",
  "12": "Commission",
  "13": "CommType",
  "14": "CumQty",
  "15": "Currency",
  "16": "EndSeqNo",
  "17": "ExecID",
  "18": "ExecInst",
  "19": "ExecRefID",
  "20": "HandlInst",
  "21": "InstrumentID",
  "22": "SecurityIDSource",
  "23": "IOIid",
  "24": "IOIQltyInd",
  "25": "IOIRefID",
  "26": "IOIQty",
  "27": "IOITransType",
  "28": "LastCapacity",
  "29": "LastMkt",
  "30": "LastPx",
  "31": "LastQty",
  "32": "LinesOfText",
  "33": "OrderID",
  "34": "OrderQty",
  "35": "MsgType",
  "36": "NewSeqNo",
  "37": "OrderID",
  "38": "OrderQty",
  "39": "OrdStatus",
  "40": "OrdType",
  "41": "OrigClOrdID",
  "42": "OrigTime",
  "43": "PossDupFlag",
  "44": "Price",
  "45": "RefSeqNum",
  "46": "RelatdSym",
  "47": "Rule80A",
  "48": "SecurityID",
  "49": "SenderCompID",
  "50": "SenderSubID",
  "51": "SendingDate",
  "52": "SendingTime",
  "53": "Quantity",
  "54": "Side",
  "55": "Symbol",
  "56": "TargetCompID",
  "57": "TargetSubID",
  "58": "Text",
  "59": "TimeInForce",
  "60": "TransactTime",
  "61": "Urgency",
  "62": "ValidUntilTime",
  "63": "SettlType",
  "64": "SettlDate",
  "65": "SymbolSfx",
  "66": "ListID",
  "67": "ListSeqNo",
  "68": "TotNoOrders",
  "69": "ListExecInst",
  "70": "AllocID",
  "71": "AllocTransType",
  "72": "RefAllocID",
  "73": "NoOrders",
  "74": "AvgPxPrecision",
  "75": "TradeDate",
  "76": "ExecBroker",
  "77": "PositionEffect",
  "78": "NoAllocs",
  "79": "AllocAccount",
  "80": "AllocQty",
  "81": "ProcessCode",
  "82": "NoRpts",
  "83": "RptSeq",
  "84": "CxlQty",
  "85": "NoDlvyInst",
  "86": "AllocStatus",
  "87": "AllocRejCode",
  "88": "Signature",
  "89": "SecureDataLen",
  "90": "SecureData",
  "91": "SignatureLength",
  "92": "EmailType",
  "93": "RawDataLength",
  "94": "RawData",
  "95": "PossResend",
  "96": "EncryptMethod",
  "97": "StopPx",
  "98": "ExDestination",
  "99": "CxlRejReason",
  "100": "OrdRejReason",
  "102": "CxlRejResponseTo",
  "103": "OrdRejResponseTo",
  "104": "IOIQualifier",
  "105": "WaveNo",
  "106": "Issuer",
  "107": "SecurityDesc",
  "108": "HeartBtInt",
  "109": "ClientID",
  "110": "MinQty",
  "111": "MaxFloor",
  "112": "TestReqID",
  "113": "ReportToExch",
  "114": "LocateReqd",
  "115": "OnBehalfOfCompID",
  "116": "OnBehalfOfSubID",
  "117": "QuoteID",
  "118": "NetMoney",
  "119": "SettlCurrAmt",
  "120": "SettlCurrency",
  "121": "ForexReq",
  "122": "OrigSendingTime",
  "123": "GapFillFlag",
  "124": "NoExecs",
  "125": "ExpireTime",
  "126": "DKReason",
  "127": "DeliverToCompID",
  "128": "DeliverToSubID",
  "129": "IOINaturalFlag",
  "130": "QuoteReqID",
  "131": "BidPx",
  "132": "OfferPx",
  "133": "BidSize",
  "134": "OfferSize",
  "135": "NoMiscFees",
  "136": "MiscFeeAmt",
  "137": "MiscFeeCurr",
  "138": "MiscFeeType",
  "139": "PrevClosePx",
  "140": "ResetSeqNumFlag",
  "141": "SenderLocationID",
  "142": "TargetLocationID",
  "143": "OnBehalfOfLocationID",
  "144": "DeliverToLocationID",
  "145": "NoRelatedSym",
  "146": "Subject",
  "147": "Headline",
  "148": "URLLink",
  "149": "ExecType",
  "150": "LeavesQty",
  "151": "CashOrderQty",
  "152": "AllocAvgPx",
  "153": "AllocNetMoney",
  "154": "SettlCurrFxRate",
  "155": "SettlCurrFxRateCalc",
  "156": "NumDaysInterest",
  "157": "AccruedInterestRate",
  "158": "AccruedInterestAmt",
  "159": "SettlInstMode",
  "160": "AllocText",
  "161": "SettlInstID",
  "162": "SettlInstTransType",
  "163": "EmailThreadID",
  "164": "SettlInstSource",
  "165": "SettlLocation",
  "166": "SecurityType",
  "167": "EffectiveTime",
  "168": "StandInstDbType",
  "169": "StandInstDbName",
  "170": "StandInstDbID",
  "171": "SettlDeliveryType",
  "172": "BidSpotRate",
  "173": "BidForwardPoints",
  "174": "OfferSpotRate",
  "175": "OfferForwardPoints",
  "176": "OrderQty2",
  "177": "SettlDate2",
  "178": "LastSpotRate",
  "179": "LastForwardPoints",
  "180": "AllocLinkID",
  "181": "AllocLinkType",
  "182": "SecondaryOrderID",
  "183": "NoIOIQualifiers",
  "184": "MaturityMonthYear",
  "185": "PutOrCall",
  "186": "StrikePrice",
  "187": "CoveredOrUncovered",
  "188": "OptAttribute",
  "189": "SecurityExchange",
  "190": "NotifyBrokerOfCredit",
  "191": "AllocHandlInst",
  "192": "MaxShow",
  "193": "PegOffsetValue",
  "194": "XmlDataLen",
  "195": "XmlData",
  "196": "SettlInstRefID",
  "197": "NoRoutingIDs",
  "198": "RoutingType",
  "199": "RoutingID",
  "200": "Spread",
  "201": "BenchmarkCurveCurrency",
  "202": "BenchmarkCurveName",
  "203": "BenchmarkCurvePoint",
  "204": "CouponRate",
  "205": "CouponPaymentDate",
  "206": "IssueDate",
  "207": "RepurchaseTerm",
  "208": "RepurchaseRate",
  "209": "Factor",
  "210": "TradeOriginationDate",
  "211": "ExDate",
  "212": "ContractMultiplier",
  "213": "NoStipulations",
  "214": "StipulationType",
  "215": "StipulationValue",
  "216": "YieldType",
  "217": "Yield",
  "218": "TotalTakedown",
  "219": "Concession",
  "220": "RepoCollateralSecurityType",
  "221": "RedemptionDate",
  "222": "UnderlyingCouponPaymentDate",
  "223": "UnderlyingIssueDate",
  "224": "UnderlyingRepoCollateralSecurityType",
  "225": "UnderlyingRepurchaseTerm",
  "226": "UnderlyingRepurchaseRate",
  "227": "UnderlyingFactor",
  "228": "UnderlyingRedemptionDate",
  "229": "SecurityStatus",
  "230": "CouponPaymentDate",
  "231": "IssueDate",
  "232": "RepurchaseTerm",
  "233": "RepurchaseRate",
  "234": "Factor",
  "235": "CreditRating",
  "236": "InstrRegistry",
  "237": "CountryOfIssue",
  "238": "StateOrProvinceOfIssue",
  "239": "LocaleOfIssue",
  "240": "RedemptionDate",
  "241": "StrikeCurrency",
  "242": "StrikeCurrency",
  "243": "StrikeMultiplier",
  "244": "StrikeValue",
  "245": "StrikePriceDeterminationMethod",
  "246": "StrikePriceBoundaryMethod",
  "247": "StrikePriceBoundaryPrecision",
  "248": "UnderlyingStrikePriceDeterminationMethod",
  "249": "UnderlyingStrikePriceBoundaryMethod",
  "250": "UnderlyingStrikePriceBoundaryPrecision",
  "251": "TradingSessionID",
  "252": "TradingSessionSubID",
  "253": "FillLiquidityInd",
  "254": "LastFragment",
  "255": "TestMessageIndicator",
  "256": "SessionRejectReason",
  "257": "ContraBroker",
  "258": "ComplianceID",
  "259": "SolicitedFlag",
  "260": "ExecRestatementReason",
  "261": "BusinessRejectRefID",
  "262": "BusinessRejectReason",
  "263": "GrossTradeAmt",
  "264": "NoContraBrokers",
  "265": "MaxMessageSize",
  "266": "NoMsgTypes",
  "267": "MsgDirection",
  "268": "NoTradingSessions",
  "269": "TotalVolumeTraded",
  "270": "DayOrderQty",
  "271": "DayCumQty",
  "272": "DayAvgPx",
  "273": "GTBookingInst",
  "274": "TradeDate",
  "275": "TransactTime",
  "276": "ReportToExch",
  "277": "Commission",
  "278": "CommType",
  "279": "CommCurrency",
  "280": "FundRenewWaiv",
  "281": "OrderCapacity",
  "282": "OrderRestrictions",
  "283": "CustOrderCapacity",
  "284": "ForexReq",
  "285": "SettlCurrency",
  "286": "BookingType",
  "287": "Text",
  "288": "EncodedTextLen",
  "289": "EncodedText",
  "290": "SettlDate2",
  "291": "OrderQty2",
  "292": "LastForwardPoints2",
  "293": "MultiLegReportingType",
  "294": "CancellationRights",
  "295": "MoneyLaunderingStatus",
  "296": "RegistID",
  "297": "Designation",
  "298": "TransBkdTime",
  "299": "ExecValuationPoint",
  "300": "ExecPriceType",
  "301": "ExecPriceAdjustment",
  "302": "PriorityIndicator",
  "303": "PriceImprovement",
  "304": "LastLiquidityInd",
  "305": "CopyMsgIndicator",
  "306": "Alteration",
  "307": "NoHops",
  "308": "HopCompID",
  "309": "HopSendingTime",
  "310": "HopRefID",
  "311": "MidPx",
  "312": "BidYield",
  "313": "MidYield",
  "314": "OfferYield",
  "315": "ClearingFeeIndicator",
  "316": "WorkingIndicator",
  "317": "LegalGUID",
  "318": "ParallelOffsetAmount",
  "319": "ParallelOffsetInFrontAmount",
  "320": "ParallelOffsetBehindAmount",
  "321": "ApplID",
  "322": "ApplSeqNum",
  "323": "ApplLastSeqNum",
  "324": "ApplResendFlag",
  "325": "ApplResponseID",
  "326": "ApplResponseError",
  "327": "ApplTotalMessageCount",
  "328": "ApplLastMsgID",
  "329": "NoApplIDs",
  "330": "TotNoOrders",
  "331": "LastFragment",
  "332": "ApplReqID",
  "333": "ApplReqType",
  "334": "ApplResponseType",
  "335": "ApplTotalMessageCount",
  "336": "ApplLastSeqNum",
  "337": "NextExpectedMsgSeqNum",
  "338": "ApplResponseID",
  "339": "ApplResponseError",
  "340": "TotNoReports",
  "341": "LastRptRequested",
  "342": "UnsolicitedIndicator",
  "343": "ApplReportID",
  "344": "ApplReportType",
  "345": "TradeReportID",
  "346": "TradeReportRefID",
  "347": "TradeTransType"
}.toTable

proc getFieldDescription*(fieldNumber: string): string =
  if fixFieldDescriptions.hasKey(fieldNumber):
    return fixFieldDescriptions[fieldNumber]
  result = "Unknown Field"
